#include<stdio.h>
int power(int a,int n)
{
        int product = 1,i;
        for(i=0;i<n;i++)
        {
                product = product*a;
        }
        return product;
}
int main()
{
        int a,n;
        printf("\nEnter a : ");
        scanf("%d",&a);
        printf("Enter n : ");
        scanf("%d",&n);
        if(a<0||n<0)
        {
                printf("The given values of a or n is negative, please re-enter inputs");
                main();
        }
        else
        {
                 printf("%d^%d is %d\n",a,n,power(a,n));
                 return 0;
        }
}
[23bcs112@mepcolinux ex1]$gcc a.c
[23bcs112@mepcolinux ex1]$./a.out

Enter a : 5
Enter n : 2
5^2 is 25
[23bcs112@mepcolinux ex1]$./a.out

Enter a : 2
Enter n : 6
2^6 is 64
[23bcs112@mepcolinux ex1]$./a.out

Enter a : -1
Enter n : 4
The given values of a or n is negative, please re-enter inputs
Enter a : -2
Enter n : -2
The given values of a or n is negative, please re-enter inputs
Enter a : 3
Enter n : 2
3^2 is 9
[23bcs112@mepcolinux ex1]$cat b.c
#include<stdio.h>
#include<stdlib.h>
void print(int *A,int n)
{
   int i;
   for(i=0;i<n;i++)
   {
      printf("%d ",A[i]);
   }
}
void SelectionSort(int *A,int n)
{
   int temp,i,j,min;
   for(i=0;i<=n-2;i++)
   {
      min=i;
      for(j=i+1;j<=n-1;j++)
      {
         if(A[min]>A[j])
            min=j;
      }
      temp=A[i];
      A[i]=A[min];
      A[min]=temp;
      printf("pass %d :",i+1);
      print(A,n);
      printf("\n");
   }
}
int main()
{
   int i,n;
   while(1)
   {
      printf("Enter the number of elements:");
      scanf("%d",&n);
      if(n<0)
         printf("The count must be positive");
      else
         break;
   }
   int *A=(int*)malloc(n*sizeof(int));
   printf("Enter the values one by one :\n");
   for(i=0;i<n;i++)
   {
       scanf("%d",&A[i]);
   }
   SelectionSort(A,n);
   printf("The final sorted array \n");
   print(A,n);
   return 0;
}
[23bcs112@mepcolinux ex1]$gcc b.c
[23bcs112@mepcolinux ex1]$./a.out
Enter the number of elements:7
Enter the values one by one :
7
10
2
3
5
1
8
pass 1 :1 10 2 3 5 7 8
pass 2 :1 2 10 3 5 7 8
pass 3 :1 2 3 10 5 7 8
pass 4 :1 2 3 5 10 7 8
pass 5 :1 2 3 5 7 10 8
pass 6 :1 2 3 5 7 8 10
The final sorted array
1 2 3 5 7 8 10 [23bcs112@mepcolinux ex1]$gcc c.c
[23bcs112@mepcolinux ex1]$./a.out
Enter the number of elements:6
Enter the values one by one :
5
3
8
1
10
2

pass 1
        3 5 8 1 10 2

        3 5 8 1 10 2

        3 5 1 8 10 2

        3 5 1 8 10 2

        3 5 1 8 2 10

*****************************

pass 2
        3 5 1 8 2 10

        3 1 5 8 2 10

        3 1 5 8 2 10

        3 1 5 2 8 10

*****************************

pass 3
        1 3 5 2 8 10

        1 3 5 2 8 10

        1 3 2 5 8 10

*****************************

pass 4
        1 3 2 5 8 10

        1 2 3 5 8 10

*****************************

pass 5
        1 2 3 5 8 10

*****************************

The final sorted array
1 2 3 5 8 10
[23bcs112@mepcolinux ex1]$exit
exit

Script done on Thu 23 Jan 2025 04:17:42 PM IST
